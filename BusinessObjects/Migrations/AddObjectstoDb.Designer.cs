// <auto-generated />
using BusinessObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using System.Reflection.Emit;

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("AddObjectsToDb")]
    partial class AddObjectsToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusinessObjects.Category", b =>
            {
                b.Property<int>("CategoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("CategoryName")
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnType("nvarchar(40)");

                b.HasKey("CategoryId");

                b.ToTable("Categories");

                b.HasData(
                    new
                    {
                        CategoryId = 1,
                        CategoryName = "Beverages"
                    },
                    new
                    {
                        CategoryId = 2,
                        CategoryName = "Condiments"
                    },
                    new
                    {
                        CategoryId = 3,
                        CategoryName = "Confections"
                    },
                    new
                    {
                        CategoryId = 4,
                        CategoryName = "Dairy Products"
                    },
                    new
                    {
                        CategoryId = 5,
                        CategoryName = "Grains/Cereals"
                    },
                    new
                    {
                        CategoryId = 6,
                        CategoryName = "Meat/Poultry"
                    },
                    new
                    {
                        CategoryId = 7,
                        CategoryName = "Produce"
                    },
                    new
                    {
                        CategoryId = 8,
                        CategoryName = "Seafood"
                    });
            });

            modelBuilder.Entity("BusinessObjects.Product", b =>
            {
                b.Property<int>("ProductId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("CategoryId")
                    .HasColumnType("int");

                b.Property<string>("ProductName")
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnType("nvarchar(40)");

                b.Property<decimal>("UnitPrice")
                    .HasColumnType("decimal(18,2)");

                b.Property<int>("UnitsInStock")
                    .HasColumnType("int");

                b.HasKey("ProductId");

                b.HasIndex("CategoryId");

                b.ToTable("Products");
            });

            modelBuilder.Entity("BusinessObjects.Product", b =>
            {
                b.HasOne("BusinessObjects.Category", "Category")
                    .WithMany("Products")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });

            modelBuilder.Entity("BusinessObjects.Category", b =>
            {
                b.Navigation("Products");
            });
#pragma warning restore 612, 618
        }
    }
}